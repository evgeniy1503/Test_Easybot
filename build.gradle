plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core:4.8.0'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2:1.4.200'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    liquibaseRuntime(
            sourceSets.main.output,
            'org.liquibase:liquibase-core:4.8.0',
            'org.liquibase.ext:liquibase-hibernate5:4.5.0',
            'org.springframework.boot:spring-boot-starter-data-jpa'
    )
}

tasks.named('test') {
	useJUnitPlatform()
}

// Настраиваем Liquibase
liquibase {
    activities {
        main {
            // Указываем путь, по которому будет сгенерирован файл миграции
            changeLogFile 'src/main/resources/db/changelog/changelog-master.yaml'
            // Указывем источник, с которым будут сравниваться изменения
            // Это база данных, изначально она пустая
            url 'jdbc:h2:./shop'
            // Имя пользователя и пароль для подключения к базе
            username 'sa'
            password 'sa'
            // Сравниваем с моделями, задавая пакет
            referenceUrl 'hibernate:spring:com.example.test' +
                    // Указываем диалект
                    '?dialect=org.hibernate.dialect.H2Dialect' +
                    // Указываем правила именования таблиц и столбцов,
                    // чтобы они соответствовали правилам Spring
                    '&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
        }
    }
}
